{
    "Comment": "A description of my state machine",
    "StartAt": "Analyze items",
    "States": {
      "Analyze items": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke",
        "Arguments": {
          "FunctionName": "arn:aws:lambda:us-west-2:008971662248:function:ClothScanner-Generate_Item_Descriptions:$LATEST",
          "Payload": "{% $states.input %}"
        },
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException",
              "Lambda.TooManyRequestsException"
            ],
            "IntervalSeconds": 1,
            "MaxAttempts": 3,
            "BackoffRate": 2,
            "JitterStrategy": "FULL"
          }
        ],
        "Assign": {
          "Bucket": "{% $states.input.BucketName %}",
          "UserID": "{% $states.input.UserID %}",
          "Date": "{% $states.input.Date %}",
          "OutfitImageKey": "{% '1_ClothScanner' & $states.input.UserID & $states.input.Date & $states.input.ImageKey %}",
          "Prompts": "{% $states.result.Payload.body.prompts %}"
        },
        "Next": "Map"
      },
      "Map": {
        "Type": "Map",
        "ItemProcessor": {
          "ProcessorConfig": {
            "Mode": "INLINE"
          },
          "StartAt": "Generate 3D icon image",
          "States": {
            "Generate 3D icon image": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "Output": "{% $states.result.Payload %}",
              "Arguments": {
                "FunctionName": "arn:aws:lambda:us-west-2:008971662248:function:ClothScanner-Generate_Image_and_Attributes:$LATEST",
                "Payload": {
                  "bucket_name": "{% $Bucket %}",
                  "user_id": "{% $UserID %}",
                  "date": "{% $Date %}",
                  "prompt": "{% $states.input %}"
                }
              },
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 3,
                  "BackoffRate": 2,
                  "JitterStrategy": "FULL"
                }
              ],
              "End": true
            }
          }
        },
        "Items": "{% $Prompts %}",
        "End": true
      }
    },
    "QueryLanguage": "JSONata"
  }